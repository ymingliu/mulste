\name{marmComposed.sim.fbs}
\alias{marmComposed.sim.fbs}
\docType{package}
\title{
  Generate scenario I data from composed model (COMARM).
}
\description{
  Generate scenario I data for composed model (COMARM).
}

\usage{
marmComposed.sim.fbs <- function(n,q,p,s1,s2,G1=NULL,group=NULL,r3_10=2,r3_20=2,r3_30=2,r4_10=2,r4_20=2,r4_30=2,r4_40=2,isfixedR=0,D3=NULL,D44=NULL,K=6,degr=3,sigma2=NULL,seed_id=NULL,r31_index=NULL,r32_index=NULL,r33_index=NULL,r41_index=NULL,r42_index=NULL,r43_index=NULL,r44_index=NULL,D0_t3=NULL,D0_t4=NULL)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{n}{Sample size.}

  \item{q}{The number of responses, \eqn{q\geq1}.}

  \item{p}{The number of covariates, \eqn{p\geq1}.}

  \item{s1}{The true covariates of each first G1 views associated with responses, \eqn{s1\geq1}.}

  \item{s2}{The true covariates of each first G1 views associated with responses, \eqn{s2\geq1}.}

  \item{G1}{The number of views that we do not consider their intergroup correlation.}

  \item{group}{A length-\eqn{p} vector of the grouping index of predictors, e.g., \eqn{group=c(1,1,1,2,2,2)} means there are \eqn{6} perdictors in the model, and the first three perdictors are in the same group and the last three perdictors are in another one.}

  \item{r310}{The first dimension of the third-order tensor. Default is \code{2}.}

  \item{r320}{The second dimension of the third-order tensor. Default is \code{2}.}

  \item{r330}{The third dimension of the third-order tensor. Default is \code{2}.}

  \item{r410}{The first dimension of the fourth-order tensor. Default is \code{2}.}

  \item{r420}{The second dimension of the fourth-order tensor. Default is \code{2}.}

  \item{r430}{The third dimension of the fourth-order tensor. Default is \code{2}.}

  \item{r440}{The third dimension of the fourth-order tensor. Default is \code{2}.}

  \item{isfixedR}{A logical value indicating whether ranks are fixed.}

  \item{D3}{The mode of unfolding \eqn{D_{(3)}}. By default, \code{D3} is generated by random.}

  \item{D44}{The mode of unfolding \eqn{D_{(4)}}. By default, \code{D44} is generated by random.}

  \item{K}{The number of B-spline basis functions, that is the plus of both degrees of basis functioins and the number of knots. Default is \code{6}, which means cubic splines.}

  \item{degr}{The number of knots of B-spline base function. Default is \code{3}.}

  \item{sigma2}{err variance. Default is \code{0.1}.}

  \item{seed_id}{A positive integer, the seed for generating the random numbers. Default is \code{1000}.}

  \item{r1_t3_index}{A user-specified sequence of \eqn{r_1} values, where \eqn{r_1} is the first dimension of single value matrix of the third-order tensor. Default is \code{r31_index}\eqn{=1,\cdots,\min(\lceil\log(n)\rceil,p)}. if \eqn{isfixedR=1}, \code{r31_index} is useless.}

  \item{r2_t3_index}{A user-specified sequence of \eqn{r_2} values, where \eqn{r_2} is the second dimension of single value matrix of the third-order tensor. Default is \code{r32_index}\eqn{=1,\cdots},\code{max{K_index}}. if \eqn{isfixedR=1}, \code{r2_index} is useless.}

  \item{r3_t3_index}{A user-specified sequence of \eqn{r_3} values, where \eqn{r_3} is the third dimension of single value matrix of the third-order tensor. Default is \code{r33_index}\eqn{=1,\cdots,\min(\lceil\log(n)\rceil,q)}. if \eqn{isfixedR=1}, \code{r3_index} is useless.}

  \item{r1_t4_index}{A user-specified sequence of \eqn{r_1} values, where \eqn{r_1} is the first dimension of single value matrix of the fourth-order tensor. Default is \code{r41_index}\eqn{=1,\cdots,\min(\lceil\log(n)\rceil,p)}. if \eqn{isfixedR=1}, \code{r1_index} is useless.}

  \item{r2_t4_index}{A user-specified sequence of \eqn{r_2} values, where \eqn{r_2} is the second dimension of single value matrix of the fourth-order tensor. Default is \code{r42_index}\eqn{=1,\cdots},\code{max{K_index}}. if \eqn{isfixedR=1}, \code{r2_index} is useless.}

  \item{r3_t4_index}{A user-specified sequence of \eqn{r_3} values, where \eqn{r_3} is the third dimension of single value matrix of the fourth-order tensor. Default is \code{r43_index}\eqn{=1,\cdots,\min(\lceil\log(n)\rceil,ng)}. if \eqn{isfixedR=1}, \code{r3_index} is useless.}

  \item{r4_t4_index}{A user-specified sequence of \eqn{r_4} values, where \eqn{r_4} is the third dimension of single value matrix of the fourth-order tensor. Default is \code{r44_index}\eqn{=1,\cdots,\min(\lceil\log(n)\rceil,q)}. if \eqn{isfixedR=1}, \code{r4_index} is useless.}

  \item{D0_t3}{A user-specified list of initialized values for the third-order tensor, including \code{ng} sub-lists where ng is the number of groups. For each sub-list, it has four initialized matrices \eqn{S_{(3)}} (called \code{S}), \code{A}, \code{B} and \code{C}. By default, a list of initialization satisfying fixed ranks is computed by random.}

  \item{D0_t4}{A user-specified list of initialized values for the fourth-order tensor, including five initialized matrices \eqn{S_{(4)}} (called \code{S}), \code{A}, \code{B}, \code{C} and \code{D}. By default, a list of initialization satisfying fixed ranks is computed by random.}

}

\details{
This function can generate scenario I data of composed model. \code{isfixedR} is required to yield a different initialization \code{D0_t3} and \code{D0_t4}. In scenario I, the true functions are exactly residing in the space of B-spline basis functions.
}

\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
  \item{Y}{Response, a \eqn{n\times q}-matrix.}

  \item{X1}{Design matrix, a \eqn{n\times p1}-matrix where p1 is a the whole number of covariates in the first G1 views.}

  \item{X2}{Design matrix, a \eqn{n\times p2}-matrix where p2 is a the whole number of covariates in the last ng-G1 views. ng is the number of views.}

  \item{f01}{True functions, a \eqn{n\times p1}-matrix.}

  \item{f02}{True functions, a \eqn{n\times p2}-matrix.}

  \item{group}{The grouping index of predictors, a length-\eqn{p} vector.}

  \item{D0_t3}{The initialized values for the third-order tensor.}

  \item{D0_t4}{The initialized values for the fourth-order tensor.}

  \item{...}{Other options for algorithm.}
}

%\author{
%Your Name, email optional.
%Maintainer: Xu Liu <liu.xu@sufe.edu.cn>
%}
\references{
  Multi-omics data integration with multi-view learning via composed tensors.
}
\keyword{ Group sparsity; Tensor low-rankness; Tucker decomposition; Multivariate additive regression; Multi-view data. }
\seealso{
  marmComposed.sim.fsin
}
\examples{
library(mulste)
n <- 200; q <- 5; p <- 100; s1 <- 5; s2 <- 3; G1 <- 1; ng = 4
group <- rep(1:ng,each=p/ng)
mydata <- marmComposed.sim.fbs(n,q,p,s1,s2,G1,group)

}
